server {

	root /srv/www/htdocs;

	server_name activity-log.phpolar.org;

	location ~ \.(svg|css|js|png|jpg|jpeg|gif|ico|woff|woff2|ttf|eot|otf|webp|avif|mp4|webm|ogv|ogg|mp3|wav|flac|aac)$ {
		gzip on;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	location / {
		# 403 can't be handled by the application
		error_page 403 = https://phpolar.org/403.html;
		# no gzip with fastcgi
		gzip off;
		access_log off;
		include /etc/nginx/proxy_params;
		proxy_pass http://127.0.0.1:4096;
		try_files $uri $uri/ @backend;
	}

	location @backend {
		# no gzip with fastcgi
		gzip off;
		access_log off;
		include /etc/nginx/proxy_params;
		proxy_pass http://127.0.0.1:4096;
	}

	include /etc/nginx/security_params;

	listen [::]:443 ssl; # managed by Certbot
	listen 443 ssl; # managed by Certbot
	ssl_certificate /etc/letsencrypt/live/phpolar.org/fullchain.pem; # managed by Certbot
	ssl_certificate_key /etc/letsencrypt/live/phpolar.org/privkey.pem; # managed by Certbot
	include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = activity-log.phpolar.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



	server_name activity-log.phpolar.org;
	listen 80;
	listen [::]:80;
    return 404; # managed by Certbot

	##
	# Nginx Bad Bot Blocker Includes
	# REPO: https://github.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker
	##
	include /etc/nginx/bots.d/ddos.conf;
 	include /etc/nginx/bots.d/blockbots.conf;
}
